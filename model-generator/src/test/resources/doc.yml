openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0.1
servers:
  - url: 'https://api.rarible.com/protocol/v0.1'
    description: Production environment (mainnet)
paths:

components:
  schemas:

    Collection:
      required:
        - features
        - id
        - name
        - type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Address'
        type:
          type: string
          enum:
            - ERC721
            - ERC1155
        owner:
          $ref: '#/components/schemas/Address'
        name:
          type: string
        symbol:
          type: string
        features:
          type: array
          items:
            type: string
            enum:
              - APPROVE_FOR_ALL
              - SET_URI_PREFIX
              - BURN
              - MINT_WITH_ADDRESS
              - SECONDARY_SALE_FEES

    Item:
      required:
        - id
        - lazySupply
        - owners
        - royalties
        - supply
        - contract
        - tokenId
        - pending
      type: object
      properties:
        id:
          type: string
          description: 'Item identifier, has format "contract:tokenId"'
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInt'
        creator:
          $ref: '#/components/schemas/Address'
        supply:
          type: integer
          description: Sum of items were emitted and left lazy ones
          example: 5
        lazySupply:
          type: integer
          description: Left lazy items (0 if minted on-chain)
          example: 3
        owners:
          type: array
          description: Owners of the target items
          items:
            $ref: '#/components/schemas/Address'
        royalties:
          type: array
          description: List of royalties
          items:
            $ref: '#/components/schemas/Part'
        pending:
          type: array
          description: Pending transfers (if any available)
          items:
            $ref: '#/components/schemas/ItemTransfer'

    Ownership:
      required:
        - date
        - id
        - lazyValue
        - owner
        - pending
        - contract
        - tokenId
        - value
      type: object
      properties:
        id:
          type: string
          description: 'Ownership identifier, has format "contract:tokenId:owner"'
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInt'
        owner:
          $ref: '#/components/schemas/Address'
        value:
          type: integer
        lazyValue:
          type: integer
          description: Left lazy value
        date:
          type: string
          description: Start date of ownership
          format: date-time
        pending:
          type: array
          description: History of ownership
          items:
            $ref: '#/components/schemas/ItemTransfer'

    LazyItem:
      description: Lazy NFT (ERC-721 or ERC-1155)
      discriminator:
        propertyName: '@type'
        mapping:
          ERC721: '#/components/schemas/LazyErc721'
          ERC1155: '#/components/schemas/LazyErc1155'
      oneOf:
        - $ref: '#/components/schemas/LazyErc1155'
        - $ref: '#/components/schemas/LazyErc721'

    LazyErc721:
      required:
        - creators
        - royalties
        - signatures
        - contract
        - tokenId
        - uri
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - ERC721
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInt'
        uri:
          type: string
        creators:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        royalties:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/Binary'

    LazyErc1155:
      required:
        - creators
        - royalties
        - signatures
        - supply
        - contract
        - tokenId
        - uri
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - ERC1155
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInt'
        uri:
          type: string
        supply:
          $ref: '#/components/schemas/BigInt'
        creators:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        royalties:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/Binary'

    Part:
      required:
        - account
        - value
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Address'
        value:
          type: integer
      example:
        account: '0x60f80121c31a0d46b5279700f9df786054aa5ee5'
        value: 300

    ItemTransfer:
      required:
        - date
        - from
        - owner
        - contract
        - tokenId
        - type
        - value
      type: object
      properties:
        date:
          type: string
          format: date-time
        owner:
          $ref: '#/components/schemas/Address'
        from:
          $ref: '#/components/schemas/Address'
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInt'
        value:
          type: integer
        type:
          type: string
          enum:
            - TRANSFER

    ItemMeta:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Identifies the asset to which this NFT represents
          example: Fancy Image
        description:
          type: string
          description: Describes the asset to which this NFT represents
          example: This is the best NFT in the world!
        attributes:
          type: array
          description: These are the attributes for the item
          items:
            $ref: '#/components/schemas/ItemAttribute'
        image:
          $ref: '#/components/schemas/Media'
        animation:
          $ref: '#/components/schemas/Media'

    Media:
      required:
        - url
        - meta
      type: object
      properties:
        url:
          type: object
          additionalProperties:
            type: string
          example:
            ORIGINAL: https://rarible.com/image.png
            PREVIEW: https://rarible.com/preview.png
        meta:
          type: object
          additionalProperties:
            type:
              $ref: '#/components/schemas/MediaMeta'
          example:
            ORIGINAL:
              type: "image/png"
              width: 100
              height: 100

    MediaMeta:
      required:
        - type
      type: object
      properties:
        type:
          type: string
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32

    ItemAttribute:
      required:
        - key
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: These are the attributes for the item
      example:
        key: color
        value: green

    Items:
      required:
        - items
        - total
      type: object
      properties:
        total:
          type: integer
          description: Number of items were found by request
          format: int64
        continuation:
          type: string
          description: Continuation token to paginate items search result
        items:
          type: array
          description: List of found items
          items:
            $ref: '#/components/schemas/Item'

    Ownerships:
      required:
        - ownerships
        - total
      type: object
      properties:
        total:
          type: integer
          description: Number of ownerships were found by request
          format: int64
        continuation:
          type: string
          description: Continuation token to paginate Ownerships search result
        ownerships:
          type: array
          description: List of found ownerships
          items:
            $ref: '#/components/schemas/Ownership'

    TokenId:
      required:
        - tokenId
      type: object
      properties:
        tokenId:
          $ref: '#/components/schemas/BigInt'

    OrderForm:
      required:
        - data
        - make
        - maker
        - salt
        - take
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - RARIBLE_V1
            - RARIBLE_V2
        maker:
          $ref: '#/components/schemas/Address'
        make:
          $ref: '#/components/schemas/Asset'
        taker:
          $ref: '#/components/schemas/Address'
        take:
          $ref: '#/components/schemas/Asset'
        salt:
          $ref: '#/components/schemas/BigInt'
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        data:
          $ref: '#/components/schemas/OrderData'
        signature:
          $ref: '#/components/schemas/Binary'

    Order:
      required:
        - cancelled
        - createdAt
        - data
        - fill
        - hash
        - lastUpdateAt
        - make
        - makeStock
        - maker
        - salt
        - take
        - type
      type: object
      properties:
        maker:
          $ref: '#/components/schemas/Address'
        make:
          $ref: '#/components/schemas/Asset'
        take:
          $ref: '#/components/schemas/Asset'
        type:
          type: string
          enum:
            - RARIBLE_V1
            - RARIBLE_V2
        fill:
          type: integer
        makeStock:
          type: integer
        cancelled:
          type: boolean
        salt:
          $ref: '#/components/schemas/Binary'
        data:
          $ref: '#/components/schemas/OrderData'
        signature:
          $ref: '#/components/schemas/Binary'
        createdAt:
          type: string
          format: date-time
        lastUpdateAt:
          type: string
          format: date-time
        hash:
          $ref: '#/components/schemas/Word'

    Asset:
      required:
        - value
        - assetType
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        value:
          type: integer

    AssetType:
      type: object
      description: Type of an Asset
      discriminator:
        propertyName: assetClass
        mapping:
          ETH: '#/components/schemas/EthAssetType'
          ERC20: '#/components/schemas/Erc20AssetType'
          ERC721: '#/components/schemas/Erc721AssetType'
          ERC1155: '#/components/schemas/Erc1155AssetType'
          ERC721_LAZY: '#/components/schemas/Erc721LazyAssetType'
          ERC1155_LAZY: '#/components/schemas/Erc1155LazyAssetType'
      oneOf:
        - $ref: '#/components/schemas/EthAssetType'
        - $ref: '#/components/schemas/Erc20AssetType'
        - $ref: '#/components/schemas/Erc721AssetType'
        - $ref: '#/components/schemas/Erc1155AssetType'
        - $ref: '#/components/schemas/Erc721LazyAssetType'
        - $ref: '#/components/schemas/Erc1155LazyAssetType'

    EthAssetType:
      type: object
      required:
        - assetClass
      properties:
        assetClass:
          type: string
          enum:
            - ETH

    Erc20AssetType:
      required:
        - assetClass
        - contract
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - ERC20
        contract:
          $ref: '#/components/schemas/Address'

    Erc721AssetType:
      required:
        - assetClass
        - contract
        - tokenId
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - ERC721
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInt'

    Erc1155AssetType:
      required:
        - assetClass
        - contract
        - tokenId
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - ERC1155
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInt'

    Erc721LazyAssetType:
      required:
        - assetClass
        - creators
        - royalties
        - signatures
        - contract
        - tokenId
        - uri
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - ERC721_LAZY
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInt'
        uri:
          type: string
        creators:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        royalties:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/Binary'

    Erc1155LazyAssetType:
      required:
        - assetClass
        - creators
        - royalties
        - signatures
        - supply
        - contract
        - tokenId
        - uri
      type: object
      properties:
        assetClass:
          type: string
          enum:
            - ERC1155_LAZY
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInt'
        uri:
          type: string
        supply:
          type: integer
        creators:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        royalties:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/Binary'

    OrderData:
      description: Lazy NFT (ERC-721 or ERC-1155)
      discriminator:
        propertyName: dataType
        mapping:
          LEGACY: '#/components/schemas/OrderDataLegacy'
          RARIBLE_V2_DATA_V1: '#/components/schemas/OrderRaribleV2DataV1'
      oneOf:
        - $ref: '#/components/schemas/OrderDataLegacy'
        - $ref: '#/components/schemas/OrderRaribleV2DataV1'

    OrderDataLegacy:
      required:
        - fee
        - dataType
      type: object
      properties:
        dataType:
          type: string
          enum:
            - LEGACY
        fee:
          type: integer
          format: int32

    OrderRaribleV2DataV1:
      required:
        - originFees
        - dataType
      type: object
      properties:
        dataType:
          type: string
          enum:
            - RARIBLE_V2_DATA_V1
        beneficiary:
          $ref: '#/components/schemas/Address'
        originFees:
          type: array
          items:
            $ref: '#/components/schemas/Part'

    OrdersPagination:
      required:
        - orders
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        continuation:
          type: string

    EncodedData:
      required:
        - data
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Binary'
        data:
          $ref: '#/components/schemas/Binary'

    ItemId:
      type: string
      example: '0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802'
    OwnershipId:
      type: string
      example: '0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802:0x215543e51b07f8a4efa9feb0c12152290cf10b0f'
    Address:
      type: string
      example: '0x60f80121c31a0d46b5279700f9df786054aa5ee5'
    Binary:
      type: string
    Word:
      type: string
    BigInt:
      type: string
      example: 717802

    IndexerApiError:
      required:
        - code
        - message
        - status
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string

